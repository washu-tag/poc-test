name: Deploy test server and run tests

on:
  push:

jobs:
  k8s-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Start a local k8s cluster
        uses: jupyterhub/action-k3s-helm@v4
        with:
          k3s-channel: latest

      - uses: actions/checkout@v4.2.1

      - name: Create k8s namespaces
        run: |
          kubectl create namespace explorer
          kubectl create namespace ctclip

      - name: Create storage class
        run: |
          cat>storageclass.yaml << EOF
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: weaviate
          provisioner: rancher.io/local-path
          reclaimPolicy: Delete
          volumeBindingMode: WaitForFirstConsumer
          EOF
          kubectl apply -f storageclass.yaml 
          rm storageclass.yaml
          
      - name: Set up secrets
        run: |
          kubectl -n explorer create secret generic ai-keys \
          --from-literal=google='your key' \
          --from-literal=azure='your key' \
          --from-literal=azure-resource='resource' \
          --from-literal=azure-assistant='assistant id' \
          --from-literal=azure-assistant-mini='assistant id'
      - name: Deploy CTCLIP
        run: |
          cd helm/ctclip
          #helm upgrade --install -n ctclip ctclip . \
          #--set huggingface.token=TODO \
          #--set resources.requests.memory=24000Mi \
          #--set resources.requests.cpu=2
          cd -

      - name: Deploy explorer
        run: |
          cd helm/explorer
          helm repo add weaviate https://weaviate.github.io/weaviate-helm
          helm dependency build
          helm upgrade --install -n explorer explorer . \
          --set resources.requests.memory=1000Mi \
          --set resources.requests.cpu=1

      - name: Wait for app startup
        run: |
          #for attempt in {1..300}; do sleep 1; if curl http://localhost/ -v --fail-with-body; then echo "App seems to be up"; break; fi; echo "waiting for app..."; done
          sleep 10

      - name: kubectl describe nodes
        run: kubectl describe nodes
      
      - name: kubectl config current-context
        run: kubectl config current-context

      - name: kubectl get nodes
        run: kubectl get nodes

      - name: kubectl -n explorer get events
        run: kubectl -n explorer get events

      - name: kubectl -n explorer get all
        run: kubectl -n explorer get all

      - name: kubectl -n explorer logs -f service/explorer
        run: kubectl -n explorer logs -f service/explorer
